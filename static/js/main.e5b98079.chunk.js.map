{"version":3,"sources":["Constants/Color.js","Styling/ComponentCSS.js","Components/Loading.js","PinClipart.com_pokeball-clip-art_843046.png","Components/TopBar.js","2gfwG.jpg","Styling/PagesCSS.js","Components/PokemonCarousel.js","Pages/HomePage.js","Pages/PokemonListPage.js","Pages/PokedexPage.js","Utils/Utils.js","Pages/PokemonDetailPage.js","App.js","reportWebVitals.js","index.js"],"names":["GOLDEN_YELLOW","topBarCSS","css","containerGithub","containerPokeball","loading","pokemonCarousel","Loading","size","TopBar","history","useHistory","onClick","push","src","PokeBall","alt","width","target","href","rel","homepage","navigationButton","pokemonCards","BackgroundImage","PokemonCarousel","data","autoplay","infinite","cellSpacing","slideWidth","map","val","className","style","color","name","toUpperCase","image","verticalAlign","onLoad","window","dispatchEvent","Event","id","GET_POKEMONS","gql","gqlVariables","limit","offset","Math","floor","random","dataTemp","HomePage","useQuery","variables","error","message","pokemonData","pokemons","results","console","log","inline","marginRight","PokemonListPage","PokedexPage","checkType","type","checkBackgroundColor","backgroundColor","PokemonDetailPage","nickName","gender","t","newData","Header","title","Body","i","Footer","content","extra","App","exact","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","client","ApolloClient","uri","cache","InMemoryCache","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e5b98079.chunk.js","sourcesContent":["export const GOLDEN_YELLOW = '#f2e9ab'\r\nexport const NORMAL = '#A8A87A';\r\nexport const FIGHTING = '#BC3330';\r\nexport const FLYING = '#A791EE';\r\nexport const POISON = '#9D429F';\r\nexport const GROUND = '#B7A040'\r\nexport const ROCK = '#B7A040';\r\nexport const BUG = '#A9B72D';\r\nexport const GHOST = '#6F5997';\r\nexport const STEEL = '#B8B8CF';\r\nexport const FIRE = '#EC813C';\r\nexport const WATER = '#6B91EE';\r\nexport const GRASS = '#7EC754';\r\nexport const ELECTRIC = '#F6D040';\r\nexport const PSYCHIC = '#F35B8A';\r\nexport const DRAGON = '#6E3DF5';\r\nexport const DARK = '#6F5849';\r\nexport const FAIRY = '#EB9AAD';\r\nexport const DEFAULT = '#6CA090';","import {css} from \"@emotion/react\";\r\nimport {GOLDEN_YELLOW} from \"../Constants/Color\";\r\n\r\nexport const topBarCSS = css`\r\n    color: black;\r\n    width: 100%;\r\n    border: 0px;\r\n    padding: auto;\r\n    height: auto;\r\n    background-image: linear-gradient(75deg, #bd4949, #7b2916);\r\n`\r\nexport const containerGithub = css`\r\n    padding: 10vh 0 10vh 0;\r\n    text-align: center;\r\n    a {\r\n        background-color: black;\r\n        border-radius: 2vh;\r\n        border-color: ${GOLDEN_YELLOW};\r\n        border-style: solid;\r\n        border-width: 1px;\r\n        color: ${GOLDEN_YELLOW};\r\n        padding: 2.5vh;\r\n        font-weight: bold;\r\n        font-size: 1.8vh;\r\n    }\r\n`\r\n\r\nexport const containerPokeball = css`\r\n    width: 100%;\r\n    padding: 6vh 0 2vh 0;\r\n    img {\r\n        display: block;\r\n        margin-left: auto;\r\n        margin-right: auto;\r\n    }\r\n    h2{\r\n        text-align: center;\r\n        font-style: italic;\r\n        font-size: 7vh;\r\n        padding-top: 5vh;\r\n        margin: auto;\r\n        color: ${GOLDEN_YELLOW};\r\n        font-family: Verdana, sans-serif;\r\n    }\r\n`\r\n\r\nexport const loading = css`\r\n        margin: 20px 0;\r\n        margin-bottom: 20px;\r\n        padding: 30px 50px;\r\n        text-align: center;\r\n        background: rgba(0, 0, 0, 0.05);\r\n        border-radius: 4px;\r\n        background-color: white;\r\n        width: 100%;\r\n`\r\n\r\nexport const pokemonCarousel = css`\r\n    // h4{\r\n    //     padding-bottom: 4px;\r\n    //     border-bottom: 100px;\r\n    // }\r\n`\r\n","import React from 'react';\r\nimport {Card, WhiteSpace} from 'antd-mobile';\r\nimport Spin from 'antd/es/spin';\r\nimport 'antd/es/spin/style/css';\r\nimport {loading} from \"../Styling/ComponentCSS\";\r\n\r\nexport const Loading =  () => {\r\n    return (\r\n        <div css={loading}>\r\n            <Spin size='large'/>\r\n            <WhiteSpace size='xl'/>\r\n            <WhiteSpace size='xl'/>\r\n            <WhiteSpace size='xl'/>\r\n            <WhiteSpace size='xl'/>\r\n            <WhiteSpace size='xl'/>\r\n            <WhiteSpace size='xl'/>\r\n            <WhiteSpace size='xl'/>\r\n            <WhiteSpace size='xl'/>\r\n            <WhiteSpace size='xl'/>\r\n            <WhiteSpace size='xl'/>\r\n            <WhiteSpace size='xl'/>\r\n        </div>\r\n    );\r\n}","export default __webpack_public_path__ + \"static/media/PinClipart.com_pokeball-clip-art_843046.4fe802e6.png\";","/** @jsxImportSource @emotion/react */\r\n\r\nimport {containerGithub,containerPokeball,topBarCSS} from '../Styling/ComponentCSS';\r\nimport PokeBall from '../PinClipart.com_pokeball-clip-art_843046.png';\r\nimport { useHistory } from 'react-router-dom'\r\n\r\nexport const TopBar = () => {\r\n    const history = useHistory();\r\n\r\n    const handlePokeballClick =  () => {\r\n        history.push('/');\r\n    }\r\n\r\n    return(\r\n        <div css={topBarCSS}>\r\n            <div css={containerPokeball}>\r\n                <a onClick={handlePokeballClick}><img src={PokeBall} alt='PokeBall' width='120vw'/></a>\r\n                <h2>Gotta Catch 'Em All!</h2>\r\n            </div>\r\n            <div css={containerGithub}>\r\n                <a target=\"_blank\" href='https://github.com/AldiPrayogi/' rel='noreferrer'>GitHub</a>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\n","export default __webpack_public_path__ + \"static/media/2gfwG.0b7e9d57.jpg\";","import {css} from \"@emotion/react\";\r\nimport BackgroundImage from '../2gfwG.jpg';\r\nimport {GOLDEN_YELLOW} from \"../Constants/Color\";\r\n\r\nexport const homepage = css`\r\n    background-color: #343434;\r\n    margin-bottom: 0px;\r\n    width: 100%;\r\n    height: auto;\r\n    text-align: center;\r\n    h2 {\r\n        font-size: 2.2vh;\r\n        color:${GOLDEN_YELLOW};\r\n    }\r\n`\r\n\r\nexport const navigationButton = css`\r\n     .am-button-small {\r\n        font-size: 2.2vh;\r\n        font-weight: bold;\r\n        border-style: solid;\r\n        border-width: 1px;\r\n        background-color: black;\r\n        border-color: ${GOLDEN_YELLOW};\r\n        color:#f2e9ab;\r\n     }\r\n`\r\n\r\nexport const pokemonCards = css`\r\n    padding-bottom: 5vh;\r\n    .am-card-header {\r\n        font-size: 5vw;\r\n        font-weight: bolder;\r\n        margin:auto;\r\n        width: 100%;\r\n        color: white;\r\n        border-radius: 10px;\r\n        background-color: #343434;\r\n    }\r\n    .am-card-header-content{\r\n        text-align: center;\r\n        color: ${GOLDEN_YELLOW};\r\n        margin-left: 33%;\r\n        border-radius: 20px;\r\n    }\r\n    h3{\r\n        font-weight: bolder;\r\n        font-size: 3vw;\r\n        margin-top: 0;\r\n    }\r\n    .cardContainer{\r\n        width: 69vw;\r\n        margin-left: auto;\r\n        margin-right: auto\r\n    }\r\n    .pokemonImageContainer{\r\n        background-image: url('${BackgroundImage}');\r\n        border-radius: 15px;\r\n    }\r\n    .pokemonDetailContainer{\r\n        text-align: left;\r\n    }\r\n    .pokemonDetailTypeContainer{\r\n        text-align: center;\r\n    }\r\n    .pokemonImage{\r\n        width: 40vh;\r\n        margin: auto;\r\n    }\r\n    .am-card {\r\n        height: 100vh;\r\n        margin: auto;\r\n        background-color: ${GOLDEN_YELLOW};\r\n        border-color: ${GOLDEN_YELLOW};\r\n        width: 80%;\r\n    }\r\n    .am-card-body {\r\n        padding-top: 7px;\r\n    }\r\n`","import React from \"react\";\r\nimport {Carousel, WhiteSpace, WingBlank} from \"antd-mobile\";\r\nimport {pokemonCarousel} from \"../Styling/ComponentCSS\";\r\nimport {useHistory} from 'react-router-dom';\r\n\r\nexport const PokemonCarousel = (data) => {\r\n    const history = useHistory();\r\n\r\n    const handleListClick =  (id) => {\r\n        history.push(`/pokemon-detail/${id}#Details`);\r\n    }\r\n\r\n    return(\r\n        <div>\r\n            <WingBlank>\r\n                <Carousel\r\n                    autoplay={false}\r\n                    infinite\r\n                    cellSpacing={10}\r\n                    slideWidth={0.8}\r\n                >\r\n                    {data.data.map(val => (\r\n                        <div css={pokemonCarousel}>\r\n                            <div className='pokemonNameContainer'>\r\n                                <h4 className='PokemonName' style={{color: '#f2e9ab'}}>{(val.name).toUpperCase()}</h4>\r\n                            </div>\r\n                            <WhiteSpace size='xl'/>\r\n                            <img\r\n                                src={val.image}\r\n                                alt=\"Pokemon Image\"\r\n                                style={{ width: '250px', verticalAlign: 'top'}}\r\n                                onLoad={() => {\r\n                                    window.dispatchEvent(new Event('resize'));\r\n                                }}\r\n                                onClick={() => handleListClick(val.id)}\r\n                            />\r\n                        </div>\r\n                    ))}\r\n                </Carousel>\r\n            </WingBlank>\r\n        </div>\r\n\r\n    )\r\n}","/** @jsxImportSource @emotion/react */\r\n\r\nimport React, {useState} from 'react';\r\nimport {Button, WhiteSpace, WingBlank, Carousel} from \"antd-mobile\";\r\nimport { useHistory } from 'react-router-dom';\r\nimport {TopBar} from \"../Components/TopBar\";\r\nimport { homepage, navigationButton,pokemonCards} from '../Styling/PagesCSS'\r\nimport {PokemonCarousel} from \"../Components/PokemonCarousel\";\r\nimport { gql, useQuery } from '@apollo/client';\r\nimport {Loading} from \"../Components/Loading\";\r\n\r\nconst GET_POKEMONS = gql`\r\n  query pokemons($limit: Int, $offset: Int) {\r\n    pokemons(limit: $limit, offset: $offset) {\r\n      results {\r\n        id\r\n        url\r\n        name\r\n        image\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst gqlVariables = {\r\n    limit: 10,\r\n    offset: Math.floor((Math.random() * 1108) + 1)\r\n};\r\n\r\n\r\nconst dataTemp = [\r\n    {\r\n        name: 'Bulbasour',\r\n        image: 'https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/1.png'\r\n    },\r\n    {\r\n        name: 'Ivysaur',\r\n        image: 'https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/2.png'\r\n    },\r\n    {\r\n        name: 'Venusaur',\r\n        image: 'https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/3.png'\r\n    }\r\n];\r\n\r\nexport const HomePage = () => {\r\n\r\n    const history = useHistory();\r\n\r\n    const { loading, error, data } = useQuery(GET_POKEMONS, {\r\n        variables: gqlVariables,\r\n    });\r\n    if (error) return `Error! ${error.message}`;\r\n\r\n    let pokemonData = dataTemp;\r\n\r\n    if(!loading) pokemonData = data.pokemons.results;\r\n\r\n    const handleListClick =  () => {\r\n        history.push('/pokemon-list');\r\n    }\r\n\r\n    const handlePokedexClick = () => {\r\n        history.push('/pokedex');\r\n    }\r\n    console.log(pokemonData)\r\n    return (\r\n        <div>\r\n            <div>\r\n                <TopBar/>\r\n            </div>\r\n            <div css={homepage}>\r\n                <div css={navigationButton}>\r\n                    <WhiteSpace size='xl'/>\r\n                    <WhiteSpace size='xl'/>\r\n                    <WhiteSpace size='l'/>\r\n                    <Button inline size=\"small\" onClick={handleListClick} style={{marginRight: '8vw'} }>Pokemon List</Button>\r\n                    <Button inline size=\"small\" onClick={handlePokedexClick}>Your Pokedex</Button>\r\n                </div>\r\n                <WhiteSpace size='xl'/>\r\n                <h2>Random Pokemons of the day</h2>\r\n                <WhiteSpace size='xl'/>\r\n                <div css={pokemonCards}>\r\n                    {/*<PokemonCarousel data={pokemonData}/>*/}\r\n                    {loading ? <Loading /> : <PokemonCarousel data={pokemonData}/>}\r\n                    {/*<Loading/>*/}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport {TopBar} from \"../Components/TopBar\";\r\nimport {navigationButton, homepage} from \"../Styling/PagesCSS\";\r\nimport {Button, WhiteSpace} from \"antd-mobile\";\r\n\r\nexport const PokemonListPage =  () => {\r\n    return (\r\n        <div>\r\n            <div>\r\n                <TopBar />\r\n            </div>\r\n            <div css={homepage}>\r\n                <div css={navigationButton}>\r\n                    <WhiteSpace size='xl'/>\r\n                    <WhiteSpace size='xl'/>\r\n                    <WhiteSpace size='xl'/>\r\n                    <WhiteSpace size='xl'/>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}","/** @jsxImportSource @emotion/react */\r\n\r\nimport React, {useState} from 'react';\r\nimport {Button, WhiteSpace, WingBlank, Carousel} from \"antd-mobile\";\r\nimport { useHistory } from 'react-router-dom';\r\nimport {TopBar} from \"../Components/TopBar\";\r\nimport { homepage, navigationButton,pokemonCards} from '../Styling/PagesCSS'\r\nimport {PokemonCarousel} from \"../Components/PokemonCarousel\";\r\n\r\nexport const PokedexPage = () => {\r\n    const history = useHistory();\r\n\r\n    const handleListClick =  () => {\r\n        history.push('/pokemon-list');\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div>\r\n                <TopBar/>\r\n            </div>\r\n            <div css={homepage}>\r\n                <div>\r\n                    <h1>asbascacs</h1>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n","import {\r\n    BUG, DARK, DEFAULT, DRAGON, ELECTRIC, FAIRY,\r\n    FIGHTING, FIRE, FLYING, GHOST, GRASS, GROUND,\r\n    NORMAL, POISON, PSYCHIC, ROCK, STEEL, WATER\r\n} from '../Constants/Color';\r\n\r\nexport const checkType = (type) => {\r\n    switch (type){\r\n        case 'normal':\r\n            return NORMAL\r\n        case 'fighting':\r\n            return FIGHTING\r\n        case 'flying':\r\n            return FLYING\r\n        case 'poison':\r\n            return POISON\r\n        case 'ground':\r\n            return GROUND\r\n        case 'rock':\r\n            return ROCK\r\n        case 'bug':\r\n            return BUG\r\n        case 'ghost':\r\n            return GHOST\r\n        case 'steel':\r\n            return STEEL\r\n        case 'fire':\r\n            return FIRE\r\n        case 'water':\r\n            return WATER\r\n        case 'grass':\r\n            return GRASS\r\n        case 'electric':\r\n            return ELECTRIC\r\n        case 'psychic':\r\n            return PSYCHIC\r\n        case 'dragon':\r\n            return DRAGON\r\n        case 'dark':\r\n            return DARK\r\n        case 'fairy':\r\n            return FAIRY\r\n        default:\r\n            return DEFAULT\r\n    }\r\n}","/** @jsxImportSource @emotion/react */\r\n\r\nimport React, {useState} from 'react';\r\nimport {Card, WingBlank, WhiteSpace, Button} from \"antd-mobile\";\r\nimport {TopBar} from \"../Components/TopBar\";\r\nimport { homepage, pokemonCards} from '../Styling/PagesCSS'\r\nimport {gql} from \"@apollo/client\";\r\nimport {css, jsx} from \"@emotion/react\";\r\nimport {checkType} from '../Utils/Utils';\r\n\r\nconst GET_POKEMONS_DETAIL = gql`\r\n  query pokemons($id: Int) {\r\n    pokemons(id: $id) {\r\n      results {\r\n        id\r\n        url\r\n        name\r\n        image\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst checkBackgroundColor = (type) => {\r\n    const backgroundColor =  checkType(type)\r\n\r\n    return css`\r\n        background-color: ${backgroundColor};\r\n        width: 31%;\r\n        text-align: center;\r\n        margin-right: 1vw;\r\n        display: inline-block;\r\n        font-size: 3vw;\r\n    `\r\n}\r\n\r\nexport const PokemonDetailPage = (id) => {\r\n\r\n    const data = {\r\n        name: 'Bulbasour',\r\n        image: 'https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/1.png',\r\n        nickName: 'Bulb',\r\n        type: [\r\n          'grass', 'poison', 'fighting', 'flying', 'ice'\r\n        ],\r\n        gender: 'Male'\r\n    };\r\n    const color = [];\r\n    data.type.map(t => {\r\n        color.push(checkType(t));\r\n    })\r\n    console.log(color);\r\n    const newData = {\r\n        ...data,\r\n        backgroundColor: color\r\n    };\r\n    console.log(newData);\r\n\r\n    return (\r\n        <div>\r\n            <div>\r\n                <TopBar/>\r\n            </div>\r\n            <div css={homepage}>\r\n                <WingBlank size=\"lg\" css={pokemonCards}>\r\n                    <WhiteSpace size=\"lg\" />\r\n                    <Card>\r\n                        <div className='cardContainer'>\r\n                            <WhiteSpace size='md'/>\r\n                            <Card.Header\r\n                                title='POKEMON'\r\n                            />\r\n                            <Card.Body>\r\n                                <h3>{(data.name).toUpperCase()}</h3>\r\n                                <div className='pokemonImageContainer'>\r\n                                    <img src={data.image} className='pokemonImage'/>\r\n                                </div>\r\n                            </Card.Body>\r\n                            <Card.Body>\r\n                                <div className='pokemonDetailContainer'>\r\n                                    <h4>asdawd</h4>\r\n                                    <div className='pokemonDetailTypeContainer'>\r\n                                        {\r\n                                            newData.type.map(i => (\r\n                                                <Button css={checkBackgroundColor(i)}>{i.toUpperCase()}</Button>\r\n                                            ))\r\n                                        }\r\n                                    </div>\r\n                                </div>\r\n                            </Card.Body>\r\n                            <Card.Footer content=\"footer content\" extra={<div>extra footer content</div>} />\r\n                        </div>\r\n                    </Card>\r\n                    <WhiteSpace size=\"lg\" />\r\n                </WingBlank>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n","import React from 'react';\nimport {css} from \"@emotion/react\";\nimport { gql, useQuery } from '@apollo/client' ;\nimport { Loading } from \"./Components/Loading\";\nimport { Error } from \"./Components/Error\";\nimport {HomePage} from \"./Pages/HomePage\";\nimport {Route, Switch} from 'react-router-dom';\nimport {PokemonListPage} from \"./Pages/PokemonListPage\";\nimport {PokedexPage} from \"./Pages/PokedexPage\";\nimport {PokemonDetailPage} from \"./Pages/PokemonDetailPage\";\n\n\nconst GET_POKEMONS = gql`\n  query pokemons($limit: Int, $offset: Int) {\n    pokemons(limit: $limit, offset: $offset) {\n      count\n      next\n      previous\n      status\n      message\n      results {\n        url\n        name\n        image\n      }\n    }\n  }\n`;\n\nfunction App() {\n    return(\n      <Switch>\n          <Route exact path='/' component={HomePage} />\n\n          <Route path='/pokemon-list' component={PokemonListPage}/>\n\n          <Route path='/pokedex' component={PokedexPage}/>\n\n          <Route path='/pokemon-detail/:id' component={PokemonDetailPage} />\n      </Switch>\n\n    );\n};\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { ApolloClient, InMemoryCache, ApolloProvider } from '@apollo/client';\nimport { BrowserRouter } from 'react-router-dom';\n\nexport const client = new ApolloClient({\n    uri: 'https://graphql-pokeapi.vercel.app/api/graphql',\n    cache: new InMemoryCache()\n});\n\nReactDOM.render(\n    <ApolloProvider client={client}>\n        <BrowserRouter>\n            <App />\n        </BrowserRouter>\n    </ApolloProvider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}